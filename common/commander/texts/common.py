def formatting(string: str, iterable):
    return [string.format(num) for num in iterable]

Texts = {
    'Simpson': 'a = {0}, b = {1}, e = {2:.15f}, h = {3}, M = {4}, n = {5}\n' +
        'Пределы интегрирования {6}..{7}\nЗначение интеграла = {8}',
    'Division': {
        'Plot': 'График А',
        'Roots': '\nF({1:i}) = {2:.8f)}\n',
        'No roots': 'Не удалось определить корни на заданном интервале.\n' +
            'Корней нет / не достаточное разбиение n\nсм. график',
        'Research': '\nЗапуск исследования функции.\nИсследуем интервал от {0} до {1}',
        'Interval': 'Определение значения корня {0} на ' +
            'интервале {1}, {2} с точностью {3:.8f}\n'
    },
    'Tangent': {
        'Name': 'Касательная {0}',
        'Plot': 'График касательной',
        'Point': 'её точка',
        'No roots': 'Похоже на интервале [{0}, {1}] корней для функции B нет',
        'Message': '\nЗначение m = {0}',
        'Derivatives': "f'({0}) = {1}, f''({0}) = {2}",
        'Problem': 'f(a) * f(b) = {0} * {1} = {0 * 1} > 0'
    },
    'Gauss': {
        'Straight': {
            'Course': '\nПрямой ход - обнуление элементов ниже главной диагонали\n',
            'Step': '\nШаг {0}\nСтрока {1} = Строка {1} - Строка {2} * ({3:.3f} / {4:.3f})'
        },
        'Reverse': {
            'Course': '\nОбратный ход - подстановка для нахождения решений\n',
            'Step': 'x{0} = {1:.3f}'
        },
        'Solutions': {
            'Common': 'Есть нулевая строка {0}',
            'None': '\nДанная система не имеет решения.',
            'Many': '\nДанная система имеет множество решений.',
            'Endless': 'Система имеет бесконечное множество решений',
            'Not found': 'Нет решений'
        },
        'Input': {
            'String': 'Введите строку матрицы / пустую строку для завершения',
            'Data': "Неверный ввод",
            'Count': 'Ошибка: Вы ввели разное количество элементов',
            'Single': 'Ошибка: Метод не применим к одной строке'
        }
    }
}
